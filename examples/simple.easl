@{group 0
  binding 0
  address uniform}
(var dimensions: vec2f)

@{group 0
  binding 1
  address uniform}
(var time: f32)

(struct VertexOutput
  @{builtin position} vertex-pos: vec4f)

(def triangles: u32
     1)

@vertex
(defn vertex [@{builtin vertex-index}
              vertex-index: u32]: VertexOutput
  (VertexOutput (vec4f (match vertex-index
                         0 (vec2f -1.)
                         1 (vec2f -1. 3.)
                         _ (vec2f 3. -1.))
                       0.
                       1.)))

@fragment
(defn fragment [in: VertexOutput]: @{location 0} vec4f
  (vec4f (pow (vec3f (/ in.vertex-pos.xy dimensions)
                     (-> time
                         (* 3.)
                         sin
                         (* 0.5)
                         (+ 0.5)))
              (vec3f 2.2))
         1.))
