@{group 0
  binding 0
  address uniform}
(var dimensions: vec2f)

@{group 0
  binding 1
  address uniform}
(var time: f32)

(def triangles: u32
     1)

(struct VertexOutput
  @builtin position: vec4f)

@vertex
(defn vertex [@builtin vertex-index: u32]: VertexOutput
  (VertexOutput (vec4f (let [a [(vec2f -1.)
                                (vec2f -1. 3.)
                                (vec2f 3. -1.)]]
                         (a vertex-index))
                       0.
                       1.)))

@fragment
(defn fragment [in: VertexOutput]: vec4f
  (vec4f (pow (vec3f (/ in.position.xy dimensions)
                     (-> time
                         (* 3.)
                         sin
                         (* 0.5)
                         (+ 0.5)))
              (vec3f 2.2))
         1.))
